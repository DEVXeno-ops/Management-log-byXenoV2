const { SlashCommandBuilder, EmbedBuilder, PermissionFlagsBits, ButtonBuilder, ActionRowBuilder, ButtonStyle } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('mute')
    .setDescription('‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')
    .addUserOption(option =>
      option.setName('user')
        .setDescription('‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå')
        .setRequired(true)
    )
    .addStringOption(option =>
      option.setName('reason')
        .setDescription('‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå')
        .setRequired(true)
    )
    .addStringOption(option =>
      option.setName('duration')
        .setDescription('‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå (‡πÉ‡∏ô‡∏ô‡∏≤‡∏ó‡∏µ)')
        .setRequired(true)
    )
    .setDefaultMemberPermissions(PermissionFlagsBits.MuteMembers),

  async execute(interaction) {
    const user = interaction.options.getUser('user');
    const reason = interaction.options.getString('reason');
    const duration = interaction.options.getString('duration');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤
    if (!user || !reason || !duration || isNaN(duration)) {
      return interaction.reply({
        embeds: [
          new EmbedBuilder()
            .setColor(0xFF5733)  // ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏™‡πâ‡∏°
            .setTitle('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå')
            .setDescription('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ, ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•, ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤)')
            .setFooter({ text: '‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' })
            .setTimestamp()
        ],
        ephemeral: true
      });
    }

    const muteDurationMs = parseInt(duration) * 60 * 1000;

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
    if (!interaction.guild.members.me.permissions.has(PermissionFlagsBits.MuteMembers)) {
      return interaction.reply({
        embeds: [
          new EmbedBuilder()
            .setColor(0xFF5733)
            .setTitle('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î')
            .setDescription('‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå **Mute Members** ‡∏Å‡∏±‡∏ö‡∏ö‡∏≠‡∏ó')
            .setFooter({ text: '‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó' })
            .setTimestamp()
        ],
        ephemeral: true
      });
    }

    try {
      const member = await interaction.guild.members.fetch(user.id);

      if (!member || member.permissions.has(PermissionFlagsBits.Administrator)) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor(0xFF5733)
              .setTitle('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î')
              .setDescription('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏û‡∏ö')
              .setFooter({ text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ' })
              .setTimestamp()
          ],
          ephemeral: true
        });
      }

      if (member.roles.cache.some(role => role.name === 'Muted')) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor(0xFF5733)
              .setTitle('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î')
              .setDescription('‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß')
              .setFooter({ text: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ' })
              .setTimestamp()
          ],
          ephemeral: true
        });
      }

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
      const confirmButton = new ButtonBuilder()
        .setCustomId('confirmMute')
        .setLabel('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå')
        .setStyle(ButtonStyle.Danger);

      const cancelButton = new ButtonBuilder()
        .setCustomId('cancelMute')
        .setLabel('‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å')
        .setStyle(ButtonStyle.Secondary);

      const row = new ActionRowBuilder().addComponents(confirmButton, cancelButton);

      const embed = new EmbedBuilder()
        .setColor(0xFF5733)
        .setTitle('üîá ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ')
        .setDescription(`
          üí¨ **‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•**: \`${reason}\`
          
          ‚è≥ **‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤**: ${duration} ‡∏ô‡∏≤‡∏ó‡∏µ
        
          ‚ö†Ô∏è **‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£!**
          
          ‚¨áÔ∏è ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå.
        `)
        .setFooter({ text: '‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' })
        .setTimestamp();
    
      await interaction.reply({ embeds: [embed], components: [row], ephemeral: true });

      const filter = i => i.user.id === interaction.user.id;
      const collector = interaction.channel.createMessageComponentCollector({ filter, time: 15000 });

      collector.on('collect', async i => {
        if (i.customId === 'confirmMute') {
          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
          if (member.voice.channel) {
            await member.voice.setMute(true);  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö voice channel
          }

          let muteRole = interaction.guild.roles.cache.find(role => role.name === 'Muted');
          if (!muteRole) {
            muteRole = await interaction.guild.roles.create({
              name: 'Muted',
              permissions: [],
            });

            interaction.guild.channels.cache.forEach(async (channel) => {
              await channel.permissionOverwrites.edit(muteRole, {
                [PermissionFlagsBits.SendMessages]: false,
                [PermissionFlagsBits.SendMessagesInThreads]: false,
                [PermissionFlagsBits.Speak]: false,
                [PermissionFlagsBits.Stream]: false,
                [PermissionFlagsBits.Connect]: false
              });
            });
          }

          await member.roles.add(muteRole);

          // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          try {
            await user.send({
              embeds: [
                new EmbedBuilder()
                  .setColor(0xFF5733)
                  .setTitle('‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏°‡∏¥‡∏ß‡∏ó‡πå‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')
                  .setDescription(`‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏°‡∏¥‡∏ß‡∏ó‡πå‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå **${interaction.guild.name}** ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${reason}\n‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: ${duration} ‡∏ô‡∏≤‡∏ó‡∏µ`)
                  .setFooter({ text: '‡πÇ‡∏õ‡∏£‡∏î‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå' })
                  .setTimestamp()
              ]
            });
          } catch (err) {
            console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏î‡πâ:', err);
          }

          // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡∏°‡∏¥‡∏ß‡∏ó‡πå
          setTimeout(async () => {
            await member.roles.remove(muteRole);
            if (member.voice.channel) await member.voice.setMute(false);  // ‡∏õ‡∏•‡∏î‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏à‡∏≤‡∏Å voice channel

            await i.followUp({
              embeds: [
                new EmbedBuilder()
                  .setColor(0x00FF00)
                  .setTitle('‚úÖ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡∏î‡∏°‡∏¥‡∏ß‡∏ó‡πå‡πÅ‡∏•‡πâ‡∏ß')
                  .setDescription(`‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ <@${user.id}> ‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡∏î‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ ${duration} ‡∏ô‡∏≤‡∏ó‡∏µ`)
                  .setFooter({ text: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' })
                  .setTimestamp()
              ],
              ephemeral: true
            });

            try {
              await user.send({
                embeds: [
                  new EmbedBuilder()
                    .setColor(0x00FF00)
                    .setTitle('‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡∏î‡∏°‡∏¥‡∏ß‡∏ó‡πå‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')
                    .setDescription(`‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡∏î‡∏°‡∏¥‡∏ß‡∏ó‡πå‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå **${interaction.guild.name}** ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ ${duration} ‡∏ô‡∏≤‡∏ó‡∏µ`)
                    .setFooter({ text: '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö' })
                    .setTimestamp()
                ]
              });
            } catch (err) {
              console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏î‡πâ:', err);
            }
          }, muteDurationMs);

          await i.update({
            embeds: [
              new EmbedBuilder()
                .setColor(0x00FF00)
                .setTitle('‚úÖ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡∏°‡∏¥‡∏ß‡∏ó‡πå')
                .setDescription(`‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ <@${user.id}> ‡∏ñ‡∏π‡∏Å‡∏°‡∏¥‡∏ß‡∏ó‡πå‡πÅ‡∏•‡πâ‡∏ß`)
                .addFields(
                  { name: '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•', value: reason, inline: false },
                  { name: '‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤', value: `${duration} ‡∏ô‡∏≤‡∏ó‡∏µ`, inline: false }
                )
                .setFooter({ text: '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' })
                .setTimestamp()
            ],
            components: [],
            ephemeral: true,
          });
        } else if (i.customId === 'cancelMute') {
          await i.update({
            content: '‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
            components: [],
            ephemeral: true,
          });
        }
      });

      collector.on('end', async (collected, reason) => {
        if (reason === 'time') {
          await interaction.editReply({
            content: '‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå',
            components: [],
            ephemeral: true,
          });
        }
      });

    } catch (error) {
      console.error('Error muting user:', error);
      return interaction.reply({
        embeds: [
          new EmbedBuilder()
            .setColor(0xFF5733)
            .setTitle('‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î')
            .setDescription('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏¥‡∏ß‡∏ó‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ')
            .setFooter({ text: '‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á' })
            .setTimestamp()
        ],
        ephemeral: true
      });
    }
  },
};
