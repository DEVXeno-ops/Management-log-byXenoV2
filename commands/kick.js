const { 
    SlashCommandBuilder, 
    PermissionFlagsBits, 
    EmbedBuilder, 
    ActionRowBuilder, 
    ButtonBuilder, 
    ButtonStyle 
  } = require('discord.js');
  
  module.exports = {
    data: new SlashCommandBuilder()
      .setName('kick')
      .setDescription('‡πÄ‡∏ï‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)')
      .addUserOption(option => 
        option.setName('user')
          .setDescription('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞')
          .setRequired(true)
      )
      .addStringOption(option => 
        option.setName('reason')
          .setDescription('‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞')
      )
      .setDefaultMemberPermissions(PermissionFlagsBits.KickMembers),
  
    async execute(interaction) {
      const user = interaction.options.getUser('user');
      const reason = interaction.options.getString('reason') || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•';
      let member = interaction.guild.members.cache.get(user.id);
  
      if (!member) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor('Red')
              .setTitle('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ')
              .setDescription('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ!')
          ],
          ephemeral: true
        });
      }
  
      const executor = interaction.member;
  
      const adminRoleIds = ['ROLE_ID_1', 'ROLE_ID_2']; // ‡πÉ‡∏™‡πà ID ‡∏Ç‡∏≠‡∏á Role ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏ï‡∏∞‡πÑ‡∏î‡πâ
  
      const isOwner = executor.id === interaction.guild.ownerId;
      const isAdmin = executor.roles.cache.some(role => adminRoleIds.includes(role.id));
  
      if (!isOwner && !isAdmin) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor('Red')
              .setTitle('üö´ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ')
              .setDescription('‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ')
          ],
          ephemeral: true
        });
      }
  
      if (member.id === interaction.guild.ownerId) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor('DarkRed')
              .setTitle('‚õî ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ï‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ!')
          ],
          ephemeral: true
        });
      }
  
      if (member.roles.cache.some(role => adminRoleIds.includes(role.id))) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor('Orange')
              .setTitle('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ï‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ')
              .setDescription('‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞')
          ],
          ephemeral: true
        });
      }
  
      if (member.id === executor.id) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor('Orange')
              .setTitle('‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ï‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ!')
          ],
          ephemeral: true
        });
      }
  
      if (!interaction.guild.members.me.permissions.has(PermissionFlagsBits.KickMembers)) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor('Red')
              .setTitle('‚ö†Ô∏è ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏ï‡∏∞')
              .setDescription('‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå **Kick Members** ‡πÅ‡∏Å‡πà‡∏ö‡∏≠‡∏ó')
          ],
          ephemeral: true
        });
      }
  
      if (executor.roles.highest.position <= member.roles.highest.position && interaction.guild.members.me.roles.highest.position <= member.roles.highest.position) {
        return interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor('Red')
              .setTitle('‚õî ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ï‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ!')
          ],
          ephemeral: true
        });
      }
  
      const kickEmbed = new EmbedBuilder()
        .setColor('DarkRed')
        .setTitle('üö® ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞ üö®')
        .setDescription(`**${user.tag}** ‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå`)
        .addFields(
          { name: 'üë§ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ', value: `<@${user.id}>`, inline: true },
          { name: 'üõë ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•', value: reason, inline: true },
          { name: 'üî® ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢', value: `<@${executor.id}>`, inline: false }
        )
        .setThumbnail(user.displayAvatarURL({ dynamic: true }))
        .setTimestamp()
        .setFooter({ text: 'Kick System', iconURL: interaction.client.user.displayAvatarURL() });
  
      const row = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
          .setCustomId('confirm_kick')
          .setLabel('‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏ï‡∏∞')
          .setStyle(ButtonStyle.Danger),
        new ButtonBuilder()
          .setCustomId('cancel_kick')
          .setLabel('‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å')
          .setStyle(ButtonStyle.Secondary)
      );
  
      const response = await interaction.reply({ embeds: [kickEmbed], components: [row], ephemeral: true });
  
      const filter = i => i.user.id === executor.id;
      const collector = response.createMessageComponentCollector({ filter, time: 15000 });
  
      collector.on('collect', async i => {
        if (i.customId === 'confirm_kick') {
          try {
            await user.send({
              embeds: [
                new EmbedBuilder()
                  .setColor('DarkRed')
                  .setTitle('üö® **‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå!** üö®')
                  .setDescription(`**${user.tag}** ‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå **${interaction.guild.name}** ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á`)
                  .setThumbnail(user.displayAvatarURL({ dynamic: true }))
                  .addFields(
                    { name: 'üõë **‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•**', value: `**${reason}**`, inline: false },
                    { name: 'üî® **‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏î‡∏¢**', value: `<@${executor.id}>`, inline: false },
                    { name: 'üìÖ **‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ï‡∏∞**', value: `<t:${Math.floor(Date.now() / 1000)}:f>`, inline: false },
                    { name: 'üìù **‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏õ‡∏•‡∏≠‡∏î‡πÄ‡∏ï‡∏∞**', value: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞.', inline: false }
                  )
                  .setFooter({ text: 'Kick System ‚Ä¢ ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå', iconURL: interaction.client.user.displayAvatarURL() })
                  .setTimestamp()
              ]
            }).catch(() => console.log(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡∏ñ‡∏∂‡∏á ${user.tag} ‡πÑ‡∏î‡πâ`));
  
            await member.kick(reason);
  
            await i.update({
              embeds: [kickEmbed.setDescription(`‚úÖ **${user.tag}** ‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!`)],
              components: []
            });
  
            const logChannel = interaction.guild.channels.cache.find(c => c.name === 'mod-logs');
            if (logChannel) {
              logChannel.send({ embeds: [kickEmbed] });
            }
          } catch (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏ï‡∏∞:', error);
            await i.update({ content: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏ï‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ!', components: [] });
          }
        } else if (i.customId === 'cancel_kick') {
          await i.update({
            embeds: [
              new EmbedBuilder()
                .setColor('Green')
                .setTitle('‚úÖ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞')
                .setDescription(`‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ï‡∏∞‡∏Ç‡∏≠‡∏á **${user.tag}** ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å`)
            ],
            components: []
          });
        }
      });
  
      collector.on('end', async () => {
        try {
          await interaction.editReply({ components: [] });
        } catch (error) {
          console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ:', error);
        }
      });
    }
  };
  